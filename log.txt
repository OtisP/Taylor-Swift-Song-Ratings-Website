Day 1;08/02/20
IDEA: The goal will be to make a website that will comprehensively rank all Taylor Swift songs, by using some sort of ELO ranking system, and deciding between two

I've constructed a database of all Taylor Swift songs, and their album. It required a lot of manual input for the individual songs, but I figured that would be easiest. A little bit of Regex made it a lot less work.
I haven't yet taken databases (next semester!) but with some help from W3 tutorials I was able to do some very simple sqlite3 commands.

I've pulled an ELO formula online that should be good enough for what I need it for.
Worked with the databases to set up a way to pull two songs

Race conditions would be an issue with enough users. I'm going to count on low amounts of users while I haven't yet taken my databases class.

Day 2;08/03/20
I was on a TEAR last night going off on this website. It turns out frontend is pretty easy to crank out. Added a lot of features. Some include: selectable album cover art, Spotify widget, a slider, the submit button that accurately changes the database, and it's a lot better as a whole now.

It required a decent amount of manual input to get all of the Spotify widgets in. I may be expanding to other artists as well, and if I were to do that I'd have to automate that data collection process. I'd also like to add a viewer that displays the current ranking of all the songs in a pretty way.

Added mouseover-text telling you current ELO of songs. Currently working on making the code more versatile for different artists.

Made the code FAR more general and it will now be much easier to do a different artist. The hard part will be writing a script to get the song lists and album covers. Depending on the artist, I could maybe just manually pull the images if that's to hard, but hopefully not.

I'm now trying to implement a script to get artists info from Spotify. I think using the spotipy module is the best way to do this, after a little research.

I was able to make a script to easily grab the names of all the songs of an artist. One issue that I had was, with Kanye West, a bunch of his music was re-released as the live version/cover/or just a straight up copy. There's work to be done on minimizing duplicate songs, but for now I'll just go through them manually and take them out.

Getting the URL to the image isn't actually that hard. For now I'm going to stick with downloading the images and saving them locally though.

The next thing that I want to do is make a ranking/leaderboard page for the songs, that accesses the database, maybe that makes/modifies a playlist as well, but we'll see. That will also involve making a sidebar to navigate through pages
I'd also like to label the parts of a slider, that will make a big difference in the readability of the website.

Got rid of a bunch of code :( because the slider wasn't intuitive at all after running it by some family members. I've changed it to make it a lot more intuitive.

Day 3;08/04/20
I'd like to start designing the leaderboard page, that will allow the users to see the rankings of the songs for a given artist. This will require getting the songs, ordered first by ELO, secondly by number of times shown, then finally by Name of song. I'll just be using a table, but I'd like to display a small image of the album art on the left side.

I think the structure will be:
ART|Rank|ELO|SONG NAME

From the little I know of SQL it looks like:
SELECT album, id, elo, song FROM swift ORDER BY elo DESC, num_shown DESC, song;

should do the trick. I get the album to modify it into the album artwork name. I get the id, so I can write those to be the order

There's some maintainability to do with not copy and pasting the artist selector and the js associated with it over. But as a beginner we'll set that aside for now. The leaderboard page seems to be working pretty nicely.

I'd like to add a sidebar now.
Okay that's done. I'd like to add an about page, and then I'd feel ready to start using it. There are still some features that could be implemented, but it's fine, especially for the project that it is. I still have no experience/knowledge about how to make the site nicely compatible with mobile. That's tough because when sharing it people are way more likely to open it up on mobile. After implementing the about page I might do that. Making the formatting a little more consistent as well, especially if I'm making this public, seems nice.

The sidebar ended up as a navbar at the top of the page, but I'm alright with that, it looks better I think. I want to add support for The Decemberists, hopefully pulling this information will take a lot less time than the other two, now that I've written scripts for it.

NOTE: I should really make the dropdown bar just get which tables are in the database, or somehow dynamically change based on the artists actually available.

The script to get artist info is good, and I made it not add duplicates, but there's no way I can automate finding all of the "Home Demo" and "Cover" versions of songs. I could try implementing some heuristics, but this feels good enough.

Added full functionality to get cover art, and it feels GOOD. Fixed a minor but in leaderboard website as well.
